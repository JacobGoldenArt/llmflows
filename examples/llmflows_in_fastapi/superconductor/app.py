# pylint: skip-file

from fastapi import FastAPI, Request
from qa_flow import create_flow
from fastapi.responses import HTMLResponse
from fastapi.staticfiles import StaticFiles
import uvicorn
import json

app = FastAPI()

app.mount("/static", StaticFiles(directory="."), name="static")


@app.get("/")
async def read_index(request: Request):
    with open("index.html") as f:
        html_content = f.read()
    return HTMLResponse(content=html_content, status_code=200)


@app.get("/qa/")
async def answer_question(question: str):
    """
    Endpoint to receive a question and return an answer.
    The answer is generated by a predefined flow and includes both a direct answer 
    and an 'ELI5' explanation.

    Args:
        question: The question to be answered.

    Returns:
        A dictionary with two keys: 'answer' and 'eli5_answer', containing the 
        respective answers.
    """
    superconductor_qa_flow = create_flow()
    result = superconductor_qa_flow.start(
        conversation_history="",
        user_question=question,
        verbose=True
    )

    answer = result["Answer Flowstep"]["generated"]
    eli5_answer = result["ELI5 Flowstep"]["generated"]
    sources = [match["metadata"] for match in result["Vectorstore Flowstep"]["call_data"]["raw_outputs"]["matches"]]

    return {"answer": answer, "eli5_answer": eli5_answer, "sources": sources}

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=9000)